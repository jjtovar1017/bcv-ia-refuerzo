name: 🚀 BCV Asset Tracking - Automated Deployment Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  ANDROID_API_LEVEL: '34'
  ANDROID_BUILD_TOOLS: '34.0.0'

jobs:
  # 🔍 Code Quality & Testing
  quality-check:
    name: 🔍 Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔍 TypeScript Check
        run: npx tsc --noEmit

      - name: 🧪 Run Tests
        run: npm test -- --coverage --watchAll=false

      - name: 📊 Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # 🌐 Web Deployment (Vercel)
  deploy-web:
    name: 🌐 Deploy Web to Vercel
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v')
    outputs:
      preview-url: ${{ steps.vercel-deploy.outputs.preview-url }}
      production-url: ${{ steps.vercel-deploy.outputs.production-url }}
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Web App
        run: npm run build
        env:
          REACT_APP_DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          REACT_APP_REDIS_URL: ${{ secrets.REDIS_URL }}
          REACT_APP_WS_URL: ${{ secrets.WS_URL }}
          REACT_APP_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          REACT_APP_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: 🚀 Deploy to Vercel
        id: vercel-deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}

      - name: 📝 Comment PR with Preview
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🌐 **Preview Deployment Ready!**\n\n🔗 **URL**: ${{ steps.vercel-deploy.outputs.preview-url }}\n\n✅ Asset tracking dashboard deployed successfully`
            })

  # 📱 Android Build & Deploy
  deploy-android:
    name: 📱 Build & Deploy Android APK
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    outputs:
      apk-url: ${{ steps.upload-apk.outputs.download-url }}
      version-name: ${{ steps.version.outputs.version-name }}
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS }}

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Web Assets
        run: npm run build
        env:
          REACT_APP_DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          REACT_APP_REDIS_URL: ${{ secrets.REDIS_URL }}
          REACT_APP_WS_URL: ${{ secrets.WS_URL }}
          REACT_APP_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: 📱 Sync Capacitor
        run: |
          npx cap sync android
          npx cap copy android

      - name: 🔢 Generate Version Info
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="1.0.0-${GITHUB_SHA:0:7}"
          fi
          echo "version-name=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: 🔐 Setup Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
          echo "KEYSTORE_PATH=keystore.jks" >> android/gradle.properties
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> android/gradle.properties
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> android/gradle.properties

      - name: 💎 Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          working-directory: android

      - name: 📦 Install Fastlane
        run: |
          cd android
          gem install fastlane
          fastlane --version

      - name: 🏗️ Build Signed APK with Fastlane
        run: |
          cd android
          fastlane build_apk version_name:${{ env.VERSION }}

      - name: 📤 Upload APK Artifact
        id: upload-apk
        uses: actions/upload-artifact@v4
        with:
          name: bcv-asset-tracking-${{ env.VERSION }}.apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30

      - name: 🏷️ Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: android/app/build/outputs/apk/release/app-release.apk
          name: BCV Asset Tracking v${{ env.VERSION }}
          body: |
            ## 🚀 BCV Asset Tracking v${{ env.VERSION }}
            
            ### 📱 Android APK
            - ✅ GPS-based asset tracking with ≤5m accuracy
            - ✅ DeepSeek AI integration for route optimization
            - ✅ Battery-optimized background location updates
            - ✅ Real-time WebSocket communication
            - ✅ Kalman filtering for improved GPS precision
            
            ### 🌐 Web Application
            - 🔗 **Production**: ${{ needs.deploy-web.outputs.production-url }}
            - 📊 Real-time asset tracking dashboard
            - 🗺️ Interactive map with geofencing
            - 🤖 DeepSeek-powered geo-analysis
            
            ### 📋 Installation
            1. Download the APK file below
            2. Enable "Install from unknown sources" on your Android device
            3. Install the APK
            4. Grant location permissions when prompted
            
            ### 🔧 Technical Details
            - **Android API Level**: ${{ env.ANDROID_API_LEVEL }}
            - **Build Tools**: ${{ env.ANDROID_BUILD_TOOLS }}
            - **Node.js**: ${{ env.NODE_VERSION }}
            - **Commit**: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 🗄️ Database Migration
  migrate-database:
    name: 🗄️ Database Migration
    runs-on: ubuntu-latest
    needs: [deploy-web]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🗄️ Run Database Migrations
        run: |
          # Install Supabase CLI
          npm install -g @supabase/cli
          
          # Run migrations
          supabase db push --db-url "${{ secrets.SUPABASE_DB_URL }}"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

  # 📢 Notification & Summary
  notify-deployment:
    name: 📢 Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-web, deploy-android, migrate-database]
    if: always() && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: 📊 Generate Deployment Summary
        run: |
          echo "## 🚀 BCV Asset Tracking Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📅 Deployment Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch/Tag**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.deploy-web.result }}" == "success" ]]; then
            echo "### 🌐 Web Deployment ✅" >> $GITHUB_STEP_SUMMARY
            if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              echo "- **Production URL**: ${{ needs.deploy-web.outputs.production-url }}" >> $GITHUB_STEP_SUMMARY
            else
              echo "- **Preview URL**: ${{ needs.deploy-web.outputs.preview-url }}" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "### 🌐 Web Deployment ❌" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.deploy-android.result }}" == "success" ]]; then
            echo "### 📱 Android Deployment ✅" >> $GITHUB_STEP_SUMMARY
            echo "- **Version**: ${{ needs.deploy-android.outputs.version-name }}" >> $GITHUB_STEP_SUMMARY
            echo "- **APK**: Available in GitHub Releases" >> $GITHUB_STEP_SUMMARY
          else
            echo "### 📱 Android Deployment ❌" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.migrate-database.result }}" == "success" ]]; then
            echo "### 🗄️ Database Migration ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "### 🗄️ Database Migration ❌" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📧 Send Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#bcv-deployments'
          text: |
            🚀 *BCV Asset Tracking Deployment*
            
            *Branch:* ${{ github.ref_name }}
            *Commit:* ${{ github.sha }}
            
            *Web:* ${{ needs.deploy-web.result == 'success' && '✅' || '❌' }} ${{ needs.deploy-web.outputs.production-url || needs.deploy-web.outputs.preview-url }}
            *Android:* ${{ needs.deploy-android.result == 'success' && '✅' || '❌' }} v${{ needs.deploy-android.outputs.version-name }}
            *Database:* ${{ needs.migrate-database.result == 'success' && '✅' || '❌' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: 📧 Send Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "🚀 BCV Asset Tracking - Deployment ${{ job.status }}"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: BCV DevOps <${{ secrets.EMAIL_USERNAME }}>
          html_body: |
            <h2>🚀 BCV Asset Tracking Deployment</h2>
            
            <h3>📋 Summary</h3>
            <ul>
              <li><strong>Branch/Tag:</strong> ${{ github.ref_name }}</li>
              <li><strong>Commit:</strong> ${{ github.sha }}</li>
              <li><strong>Status:</strong> ${{ job.status }}</li>
            </ul>
            
            <h3>🌐 Web Deployment</h3>
            <p>Status: ${{ needs.deploy-web.result == 'success' && '✅ Success' || '❌ Failed' }}</p>
            ${{ needs.deploy-web.outputs.production-url && format('<p><a href="{0}">🔗 Production URL</a></p>', needs.deploy-web.outputs.production-url) || '' }}
            ${{ needs.deploy-web.outputs.preview-url && format('<p><a href="{0}">🔗 Preview URL</a></p>', needs.deploy-web.outputs.preview-url) || '' }}
            
            <h3>📱 Android Deployment</h3>
            <p>Status: ${{ needs.deploy-android.result == 'success' && '✅ Success' || '❌ Failed' }}</p>
            <p>Version: ${{ needs.deploy-android.outputs.version-name }}</p>
            
            <h3>🗄️ Database Migration</h3>
            <p>Status: ${{ needs.migrate-database.result == 'success' && '✅ Success' || '❌ Failed' }}</p>
            
            <hr>
            <p><small>Generated by BCV Asset Tracking CI/CD Pipeline</small></p>