# Script de Deployment para Vercel - Asistente de Medios BCV
# Autor: Cascade AI Assistant
# Fecha: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")

Write-Host "=== DEPLOYMENT ASISTENTE DE MEDIOS BCV ===" -ForegroundColor Cyan
Write-Host "Iniciando proceso de deployment a Vercel..." -ForegroundColor Green

# Verificar si Vercel CLI est√° instalado
try {
    $vercelVersion = vercel --version
    Write-Host "‚úÖ Vercel CLI encontrado: $vercelVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Vercel CLI no encontrado. Instalando..." -ForegroundColor Red
    npm install -g vercel
    Write-Host "‚úÖ Vercel CLI instalado correctamente" -ForegroundColor Green
}

# Verificar que estamos en el directorio correcto
if (!(Test-Path "package.json")) {
    Write-Host "‚ùå Error: No se encontr√≥ package.json. Ejecute este script desde la ra√≠z del proyecto." -ForegroundColor Red
    exit 1
}

Write-Host "üìÅ Directorio del proyecto verificado" -ForegroundColor Green

# Limpiar build anterior
Write-Host "üßπ Limpiando builds anteriores..." -ForegroundColor Yellow
if (Test-Path "dist") {
    Remove-Item -Recurse -Force "dist"
    Write-Host "‚úÖ Directorio dist eliminado" -ForegroundColor Green
}

# Instalar dependencias
Write-Host "üì¶ Instalando dependencias..." -ForegroundColor Yellow
npm install --legacy-peer-deps
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error al instalar dependencias" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ Dependencias instaladas correctamente" -ForegroundColor Green

# Ejecutar build
Write-Host "üî® Construyendo aplicaci√≥n..." -ForegroundColor Yellow
npm run build
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error en el proceso de build" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ Build completado exitosamente" -ForegroundColor Green

# Verificar que el build se gener√≥ correctamente
if (!(Test-Path "dist/index.html")) {
    Write-Host "‚ùå Error: No se gener√≥ el archivo dist/index.html" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Archivos de build verificados" -ForegroundColor Green

# Mostrar informaci√≥n del proyecto
Write-Host "`nüìä INFORMACI√ìN DEL PROYECTO:" -ForegroundColor Cyan
Write-Host "Nombre: Asistente de Medios BCV" -ForegroundColor White
Write-Host "Framework: React + TypeScript + Vite" -ForegroundColor White
Write-Host "Directorio de salida: dist/" -ForegroundColor White

# Verificar variables de entorno cr√≠ticas
Write-Host "`nüîê VERIFICANDO VARIABLES DE ENTORNO:" -ForegroundColor Cyan
$envVars = @(
    "VITE_GEMINI_API_KEY",
    "VITE_TELEGRAM_API_ID", 
    "VITE_TELEGRAM_API_HASH",
    "VITE_NEWS_API_KEY",
    "VITE_YOUTUBE_API_KEY"
)

foreach ($var in $envVars) {
    $value = [Environment]::GetEnvironmentVariable($var)
    if ($value) {
        Write-Host "‚úÖ $var configurada" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  $var no configurada (funcionalidad limitada)" -ForegroundColor Yellow
    }
}

# Preguntar si continuar con deployment
Write-Host "`nüöÄ ¬øDesea continuar con el deployment a Vercel? (Y/N): " -ForegroundColor Cyan -NoNewline
$response = Read-Host

if ($response -eq "Y" -or $response -eq "y" -or $response -eq "yes" -or $response -eq "Yes") {
    Write-Host "üöÄ Iniciando deployment a Vercel..." -ForegroundColor Green
    
    # Ejecutar deployment
    vercel --prod
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "`nüéâ ¬°DEPLOYMENT COMPLETADO EXITOSAMENTE!" -ForegroundColor Green
        Write-Host "‚úÖ La aplicaci√≥n est√° ahora disponible en producci√≥n" -ForegroundColor Green
        Write-Host "üîó Revise la URL proporcionada por Vercel arriba" -ForegroundColor Cyan
        
        Write-Host "`nüìã PR√ìXIMOS PASOS:" -ForegroundColor Cyan
        Write-Host "1. Configure las variables de entorno en el dashboard de Vercel" -ForegroundColor White
        Write-Host "2. Pruebe todas las funcionalidades en producci√≥n" -ForegroundColor White
        Write-Host "3. Configure el dominio personalizado si es necesario" -ForegroundColor White
        
    } else {
        Write-Host "‚ùå Error durante el deployment" -ForegroundColor Red
        Write-Host "Revise los logs arriba para m√°s detalles" -ForegroundColor Yellow
        exit 1
    }
} else {
    Write-Host "‚è∏Ô∏è  Deployment cancelado por el usuario" -ForegroundColor Yellow
    Write-Host "El build est√° listo. Puede ejecutar 'vercel --prod' manualmente cuando est√© listo." -ForegroundColor Cyan
}

Write-Host "`n=== PROCESO COMPLETADO ===" -ForegroundColor Cyan
